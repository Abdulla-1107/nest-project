import { PrismaService } from "src/prisma/prisma.service";
import { CreateProductDto } from "./dto/create-product.dto";
import { UpdateProductDto } from "./dto/update-product.dto";
export declare class ProductService {
    private prisma;
    constructor(prisma: PrismaService);
    create(data: CreateProductDto): Promise<{
        id: string;
        status: string;
        name: string;
        userId: string;
        location: import("@prisma/client/runtime/library").JsonValue;
        description: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        condition: string;
        bargain: boolean;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        categoryId: string;
    }>;
    findAll(page: number, limit: number, search: string, categoryId: string): Promise<{
        id: string;
        status: string;
        name: string;
        userId: string;
        location: import("@prisma/client/runtime/library").JsonValue;
        description: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        condition: string;
        bargain: boolean;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        categoryId: string;
    }[]>;
    findOne(id: string): Promise<{
        id: string;
        status: string;
        name: string;
        userId: string;
        location: import("@prisma/client/runtime/library").JsonValue;
        description: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        condition: string;
        bargain: boolean;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        categoryId: string;
    }>;
    update(id: string, userId: string, data: UpdateProductDto): Promise<{
        id: string;
        status: string;
        name: string;
        userId: string;
        location: import("@prisma/client/runtime/library").JsonValue;
        description: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        condition: string;
        bargain: boolean;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        categoryId: string;
    }>;
    remove(id: string, userId: string): Promise<{
        id: string;
        status: string;
        name: string;
        userId: string;
        location: import("@prisma/client/runtime/library").JsonValue;
        description: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        condition: string;
        bargain: boolean;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        categoryId: string;
    }>;
}
