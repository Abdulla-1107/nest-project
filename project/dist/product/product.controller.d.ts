import { ProductService } from "./product.service";
import { CreateProductDto } from "./dto/create-product.dto";
import { UpdateProductDto } from "./dto/update-product.dto";
export declare class ProductController {
    private readonly productService;
    constructor(productService: ProductService);
    create(req: Request, data: CreateProductDto): Promise<{
        id: string;
        name: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        description: string;
        condition: string;
        bargain: boolean;
        status: string;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        userId: string;
        categoryId: string;
    } | undefined>;
    findAll(page: string, limit: string, search: string, categoryId: string): Promise<{
        id: string;
        name: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        description: string;
        condition: string;
        bargain: boolean;
        status: string;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        userId: string;
        categoryId: string;
    }[]>;
    findOne(id: string): Promise<{
        id: string;
        name: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        description: string;
        condition: string;
        bargain: boolean;
        status: string;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        userId: string;
        categoryId: string;
    }>;
    update(req: Request, id: string, data: UpdateProductDto): Promise<{
        id: string;
        name: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        description: string;
        condition: string;
        bargain: boolean;
        status: string;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        userId: string;
        categoryId: string;
    }>;
    remove(req: Request, id: string): Promise<{
        id: string;
        name: string;
        price: import("@prisma/client/runtime/library").Decimal;
        discountPercentage: number;
        discountAmount: import("@prisma/client/runtime/library").Decimal | null;
        finalPrice: import("@prisma/client/runtime/library").Decimal | null;
        count: number;
        description: string;
        condition: string;
        bargain: boolean;
        status: string;
        type: import(".prisma/client").$Enums.ProductType;
        createdAt: Date;
        userId: string;
        categoryId: string;
    }>;
}
